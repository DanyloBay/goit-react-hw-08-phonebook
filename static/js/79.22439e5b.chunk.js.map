{"version":3,"file":"static/js/79.22439e5b.chunk.js","mappings":"8OAGaA,EAAQC,EAAAA,EAAAA,GAAH,yJAQLC,EAAQD,EAAAA,EAAAA,MAAH,6FAMLE,EAAaF,EAAAA,EAAAA,KAAH,sGAMVG,GAAQH,EAAAA,EAAAA,GAAOI,EAAAA,GAAPJ,CAAH,uUAgBLK,EAASL,EAAAA,EAAAA,OAAH,yd,8BCvBnB,MAZA,WACE,IAAMM,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAOjB,MAAO,CAAEC,aALY,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACnCP,EAASQ,EAAAA,EAAAA,aAAwB,CAAEH,KAAAA,EAAMC,MAAAA,EAAOC,SAAAA,KAChDL,EAAS,YACV,EAGF,E,oBC6CD,MAtDA,WACE,IAAQE,EAAiBK,IAAjBL,aAER,OACE,iCACE,SAACX,EAAD,4BAEA,SAAC,KAAD,CACEiB,cAAe,CAAEL,KAAM,GAAIC,MAAO,GAAIC,SAAU,IAChDI,SAAUP,EACVQ,iBAAkBC,EAAAA,GAHpB,SAKG,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,aAAcC,EAAzB,EAAyBA,aAAcC,EAAvC,EAAuCA,aAAvC,OACC,UAAC,KAAD,CAAMN,SAAUK,EAAhB,WACE,UAACrB,EAAD,YACE,SAACC,EAAD,kCACA,SAACC,EAAD,CACEqB,KAAK,OACLb,KAAK,OACLc,SAAUJ,EACVK,MAAON,EAAOT,QAEhB,SAAC,KAAD,CAAcA,KAAK,OAAOgB,UAAU,YAEtC,UAAC1B,EAAD,YACE,SAACC,EAAD,mCACA,SAACC,EAAD,CACEqB,KAAK,QACLb,KAAK,QACLc,SAAUJ,EACVK,MAAON,EAAOR,SAEhB,SAAC,KAAD,CAAcD,KAAK,QAAQgB,UAAU,YAEvC,UAAC1B,EAAD,YACE,SAACC,EAAD,kCACA,SAACC,EAAD,CACEqB,KAAK,WACLb,KAAK,WACLc,SAAUJ,EACVK,MAAON,EAAOP,YAEhB,SAAC,KAAD,CAAcF,KAAK,WAAWgB,UAAU,YAE1C,SAACtB,EAAD,CAAQmB,KAAK,SAAb,SACGD,EAAe,MAAQ,mBAjC7B,MAwCR,EC9CD,MARA,WACE,OACE,SAACK,EAAA,EAAD,WACE,SAAC,EAAD,KAGL,C,sHCPYC,EAAgBC,EAAAA,GAAW,CACtCnB,KAAMmB,EAAAA,KAAaC,WAAWC,IAAI,GAAGC,IAAI,IACzCC,OAAQJ,EAAAA,KAAaC,aAGVI,EAAkBL,EAAAA,GAAW,CACxClB,MAAOkB,EAAAA,KAAaC,WAAWnB,QAC/BC,SAAUiB,EAAAA,KAAaC,WAAWC,IAAI,GAAGC,IAAI,MAGlCd,EAAqBW,EAAAA,GAAW,CAC3CnB,KAAMmB,EAAAA,KAAaC,WAAWC,IAAI,GAAGC,IAAI,IACzCrB,MAAOkB,EAAAA,KAAaC,WAAWnB,QAC/BC,SAAUiB,EAAAA,KAAaC,WAAWC,IAAI,GAAGC,IAAI,K","sources":["components/RegisterForm/RegisterForm.styled.js","hooks/useRegisterUser.js","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage.js","utilities/validationSchema.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Field } from 'formik';\n\nexport const Title = styled.h2`\n  font-size: 26px;\n  text-transform: uppercase;\n  font-weight: 600;\n  color: var(--main-text-color);\n  margin-bottom: 30px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n`;\n\nexport const TitleInput = styled.span`\n  font-weight: 600;\n  color: var(--main-text-color);\n  margin-bottom: 5px;\n`;\n\nexport const Input = styled(Field)`\n  height: 40px;\n  padding: 0 10px 0 10px;\n  border: 1px solid var(--second-bg-color);\n  outline: none;\n  color: var(--main-text-color);\n  font-size: 14px;\n  :focus {\n    border-color: var(--accent-bg-color);\n  }\n  ::placeholder {\n    font-size: 12px;\n    color: var(--main-text-color);\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 200px;\n  height: 40px;\n  background-color: var(--accent-bg-color);\n  color: var(--second-text-color);\n  font-family: inherit;\n  border: none;\n  cursor: pointer;\n  transition: background-color var(--main-hover-animation);\n  :hover,\n  :focus {\n    background-color: var(--second-bg-color);\n  }\n  @media screen and (min-width: 768px) {\n    width: 300px;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport operations from 'redux/auth/auth-operations';\n\nfunction useRegisterUser() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const onSubmitForm = ({ name, email, password }) => {\n    dispatch(operations.registerUser({ name, email, password }));\n    navigate('/contacts');\n  };\n\n  return { onSubmitForm };\n}\n\nexport default useRegisterUser;\n","import { Formik, Form, ErrorMessage } from 'formik';\nimport { Title, Label, TitleInput, Input, Button } from './RegisterForm.styled';\nimport useRegisterUser from 'hooks/useRegisterUser';\nimport { userRegisterSchema } from 'utilities/validationSchema';\n\nfunction RegisterForm() {\n  const { onSubmitForm } = useRegisterUser();\n\n  return (\n    <>\n      <Title>Registration</Title>\n\n      <Formik\n        initialValues={{ name: '', email: '', password: '' }}\n        onSubmit={onSubmitForm}\n        validationSchema={userRegisterSchema}\n      >\n        {({ values, handleChange, handleSubmit, isSubmitting }) => (\n          <Form onSubmit={handleSubmit}>\n            <Label>\n              <TitleInput>What is your name?</TitleInput>\n              <Input\n                type=\"text\"\n                name=\"name\"\n                onChange={handleChange}\n                value={values.name}\n              />\n              <ErrorMessage name=\"name\" component=\"div\" />\n            </Label>\n            <Label>\n              <TitleInput>Your e-mail adress?</TitleInput>\n              <Input\n                type=\"email\"\n                name=\"email\"\n                onChange={handleChange}\n                value={values.email}\n              />\n              <ErrorMessage name=\"email\" component=\"div\" />\n            </Label>\n            <Label>\n              <TitleInput>Create a password.</TitleInput>\n              <Input\n                type=\"password\"\n                name=\"password\"\n                onChange={handleChange}\n                value={values.password}\n              />\n              <ErrorMessage name=\"password\" component=\"div\" />\n            </Label>\n            <Button type=\"submit\">\n              {isSubmitting ? '...' : 'Registration'}\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n}\n\nexport default RegisterForm;\n","import Container from 'components/Container';\nimport RegisterForm from 'components/RegisterForm';\n\nfunction RegisterPage() {\n  return (\n    <Container>\n      <RegisterForm />\n    </Container>\n  );\n}\n\nexport default RegisterPage;\n","import * as yup from 'yup';\n\nexport const contactSchema = yup.object({\n  name: yup.string().required().min(3).max(30),\n  number: yup.number().required(),\n});\n\nexport const userLoginSchema = yup.object({\n  email: yup.string().required().email(),\n  password: yup.string().required().min(7).max(14),\n});\n\nexport const userRegisterSchema = yup.object({\n  name: yup.string().required().min(3).max(30),\n  email: yup.string().required().email(),\n  password: yup.string().required().min(7).max(14),\n});\n"],"names":["Title","styled","Label","TitleInput","Input","Field","Button","dispatch","useDispatch","navigate","useNavigate","onSubmitForm","name","email","password","operations","useRegisterUser","initialValues","onSubmit","validationSchema","userRegisterSchema","values","handleChange","handleSubmit","isSubmitting","type","onChange","value","component","Container","contactSchema","yup","required","min","max","number","userLoginSchema"],"sourceRoot":""}