{"version":3,"file":"static/js/593.64fb7a1c.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/GoBack/GoBack.styled.js","components/GoBack/GoBack.jsx","components/ContactForm/ContactForm.jsx","hooks/useChangeContactForm.js","pages/ChangeContactPage.js","utilities/validationSchema.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Field } from 'formik';\n\nexport const TitlePage = styled.h2`\n  margin-bottom: 30px;\n  text-transform: uppercase;\n  font-weight: 600;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n`;\n\nexport const Title = styled.span`\n  font-weight: 600;\n  color: var(--main-text-color);\n  margin-bottom: 5px;\n`;\n\nexport const StyledField = styled(Field)`\n  height: 40px;\n  padding: 0 10px 0 10px;\n  border: 1px solid var(--second-bg-color);\n  outline: none;\n  color: var(--main-text-color);\n  font-size: 14px;\n  :focus {\n    border-color: var(--accent-bg-color);\n  }\n  ::placeholder {\n    font-size: 12px;\n    color: var(--main-text-color);\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 200px;\n  height: 40px;\n  background-color: var(--accent-bg-color);\n  color: var(--second-text-color);\n  font-family: inherit;\n  border: none;\n  cursor: pointer;\n  transition: background-color var(--main-hover-animation);\n  :hover,\n  :focus {\n    background-color: var(--second-bg-color);\n  }\n  @media screen and (min-width: 768px) {\n    width: 300px;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 30px;\n  padding: 10px 25px 10px 25px;\n  background-color: var(--second-bg-color);\n  color: var(--second-text-color);\n  font-family: inherit;\n  border: none;\n  cursor: pointer;\n  transition: background-color var(--main-hover-animation);\n  :hover,\n  :focus {\n    background-color: var(--accent-bg-color);\n  }\n`;\n\nexport const Label = styled.span`\n  margin-left: 10px;\n`;\n","import propTypes from 'prop-types';\nimport { FaLongArrowAltLeft } from 'react-icons/fa';\nimport { Button, Label } from './GoBack.styled';\nimport { useNavigate } from 'react-router-dom';\n\nfunction GoBack({ text, path }) {\n  const navigate = useNavigate();\n  const goToPage = () => navigate(path);\n\n  return (\n    <Button type=\"button\" onClick={goToPage}>\n      <FaLongArrowAltLeft />\n      <Label>{text}</Label>\n    </Button>\n  );\n}\n\nGoBack.prototype = {\n  label: propTypes.string,\n  path: propTypes.string,\n};\n\nexport default GoBack;\n","import propTypes from 'prop-types';\nimport {\n  TitlePage,\n  Label,\n  Title,\n  StyledField,\n  Button,\n} from './ContactForm.styled';\nimport { Formik, Form, ErrorMessage } from 'formik';\nimport GoBack from 'components/GoBack';\n\nfunction ContactForm({\n  title,\n  initialValues,\n  onSubmitForm,\n  validationSchema,\n  buttonLabel,\n}) {\n  return (\n    <>\n      <TitlePage>{title}</TitlePage>\n      <GoBack text=\"Contact list\" path=\"/contacts\" />\n      <Formik\n        initialValues={initialValues}\n        onSubmit={onSubmitForm}\n        validationSchema={validationSchema}\n      >\n        {({ values, handleChange, handleSubmit, isSubmitting }) => (\n          <Form onSubmit={handleSubmit}>\n            <Label>\n              <Title>Name</Title>\n              <StyledField\n                type=\"text\"\n                name=\"name\"\n                onChange={handleChange}\n                value={values.name}\n              />\n              <ErrorMessage name=\"name\" component=\"div\" />\n            </Label>\n            <Label>\n              <Title>Number</Title>\n              <StyledField\n                type=\"tel\"\n                name=\"number\"\n                onChange={handleChange}\n                value={values.number}\n              />\n              <ErrorMessage name=\"number\" component=\"div\" />\n            </Label>\n            <Button type=\"submit\" disabled={isSubmitting}>\n              {isSubmitting ? '...' : buttonLabel}\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n}\n\nContactForm.propTypes = {\n  title: propTypes.string,\n  initialValues: propTypes.shape({\n    name: propTypes.string,\n    number: propTypes.string,\n  }),\n  onSubmitForm: propTypes.func,\n  validationSchema: propTypes.shape({\n    name: propTypes.func,\n    number: propTypes.func,\n  }),\n  buttonLabel: propTypes.string,\n};\n\nexport default ContactForm;\n","import { useParams, useNavigate } from 'react-router-dom';\nimport {\n  useChangeContactMutation,\n  useGetContactsQuery,\n} from 'redux/contacts/contact-api';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nfunction useChangeContactForm() {\n  let currentContact = null;\n  let initialValues = null;\n\n  const { contactId } = useParams();\n  const navigate = useNavigate();\n\n  const [changeContact, { isLoading: isUpdating }] = useChangeContactMutation();\n  const { data: contacts } = useGetContactsQuery();\n\n  if (contacts) {\n    currentContact = contacts.find(({ id }) => id === contactId);\n\n    initialValues = {\n      name: currentContact.name,\n      number: currentContact.number,\n    };\n  }\n\n  const onSubmitForm = values => {\n    if (JSON.stringify(values) === JSON.stringify(initialValues)) {\n      Notify.warning('Try to change something first.');\n      return;\n    }\n    changeContact({ contactId, ...values });\n    navigate('/contacts');\n    Notify.success('The contact has been successfully changed.');\n  };\n\n  return { isUpdating, onSubmitForm, initialValues };\n}\n\nexport default useChangeContactForm;\n","import Container from 'components/Container';\nimport ContactForm from 'components/ContactForm';\nimport useChangeContactForm from 'hooks/useChangeContactForm';\nimport { contactSchema } from 'utilities/validationSchema';\n\nfunction ChangeContactPage() {\n  const { onSubmitForm, initialValues } = useChangeContactForm();\n\n  return (\n    <Container>\n      <ContactForm\n        title={`Edit Contact ${initialValues.name}`}\n        initialValues={initialValues}\n        onSubmitForm={onSubmitForm}\n        validationSchema={contactSchema}\n        buttonLabel=\"Change contact\"\n      />\n    </Container>\n  );\n}\n\nexport default ChangeContactPage;\n","import * as yup from 'yup';\n\nexport const contactSchema = yup.object({\n  name: yup.string().required().min(3).max(30),\n  number: yup.number().required(),\n});\n\nexport const userLoginSchema = yup.object({\n  email: yup.string().required().email(),\n  password: yup.string().required().min(7).max(14),\n});\n\nexport const userRegisterSchema = yup.object({\n  name: yup.string().required().min(3).max(30),\n  email: yup.string().required().email(),\n  password: yup.string().required().min(7).max(14),\n});\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["TitlePage","styled","Label","Title","StyledField","Field","Button","GoBack","text","path","navigate","useNavigate","type","onClick","prototype","label","propTypes","title","initialValues","onSubmitForm","validationSchema","buttonLabel","onSubmit","values","handleChange","handleSubmit","isSubmitting","name","onChange","value","component","number","disabled","currentContact","contactId","useParams","useChangeContactMutation","changeContact","isUpdating","isLoading","contacts","useGetContactsQuery","data","find","id","JSON","stringify","Notify","useChangeContactForm","Container","ContactForm","contactSchema","yup","required","min","max","userLoginSchema","email","password","userRegisterSchema","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes"],"sourceRoot":""}